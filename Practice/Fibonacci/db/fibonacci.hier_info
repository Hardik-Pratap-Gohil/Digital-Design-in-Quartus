|DUT
input_vector[0] => fibonacci:add_instance.X0
input_vector[1] => fibonacci:add_instance.X1
input_vector[2] => fibonacci:add_instance.X2
input_vector[3] => fibonacci:add_instance.X3
input_vector[4] => fibonacci:add_instance.X4
output_vector[0] << fibonacci:add_instance.Y


|DUT|fibonacci:add_instance
X4 => INVERTER:I1.A
X4 => AND_2:A7.B
X3 => INVERTER:I2.A
X2 => INVERTER:I3.A
X2 => AND_2:A5.B
X1 => INVERTER:I4.A
X0 => XOR_2:XOR1.B
X0 => AND_2:A4.B
Y <= OR_2:O2.Y


|DUT|fibonacci:add_instance|INVERTER:I1
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|INVERTER:I2
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|INVERTER:I3
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|INVERTER:I4
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|AND_2:A1
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|XOR_2:XOR1
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|AND_2:A2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|OR_2:O1
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|AND_2:A3
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|AND_2:A4
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|AND_2:A5
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|AND_2:A6
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|AND_2:A7
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|fibonacci:add_instance|OR_2:O2
A => Y.IN0
B => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


